import { type SVGAttributes, useEffect, useMemo } from 'react'

import { AlertDialogCancel } from '@radix-ui/react-alert-dialog'
import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query'
import { ArrowRight } from 'lucide-react'
import { useForm } from 'react-hook-form'
import { useTranslation } from 'react-i18next'

import { LoadingOverlay } from '@/common/components'
import { MonthPicker } from '@/common/components/month-picker'
import {
  AlertDialog,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle
} from '@/common/components/ui/alert-dialog'
import { Button } from '@/common/components/ui/button'
import { useRequisitesStore } from '@/common/features/requisites'
import { useToggle } from '@/common/hooks'

import { MainbookQueryKeys } from '../config'
import { defaultValues } from '../details/config'
import { MainbookTable } from '../details/mainbook-table'
import { MainbookProvodkaColumns } from '../details/provodki'
import {
  getMainbookColumns,
  transformMainbookAutoFillData,
  transformMainbookAutoFillDataToSave
} from '../details/utils'
import { MainbookService } from '../service'
import { useMainbookSaldo } from './use-saldo'

export const MainbookSaldoUpdateManager = () => {
  const queryClient = useQueryClient()
  const dialogToggle = useToggle()

  const { budjet_id, main_schet_id } = useRequisitesStore()

  const { t } = useTranslation()
  const { data: types, isFetching: isFetchingTypes } = useQuery({
    queryKey: [
      MainbookQueryKeys.getTypes,
      {
        budjet_id: budjet_id!,
        main_schet_id: main_schet_id!
      }
    ],
    queryFn: MainbookService.getTypes,
    enabled: !!budjet_id
  })

  const { queuedMonths, dequeueMonth } = useMainbookSaldo()

  const form = useForm({
    defaultValues
  })

  const { mutate: autofill, isPending: isAutofilling } = useMutation({
    mutationKey: [MainbookQueryKeys.getAutofill],
    mutationFn: MainbookService.getAutofillData,
    onSuccess: (res, values) => {
      const childs = res?.data ?? []
      const year = values?.year
      const month = values?.month
      form.setValue('year', year)
      form.setValue('month', month)
      form.setValue('childs', transformMainbookAutoFillData(childs))
    },
    onError: () => {
      form.setValue('childs', [])
    }
  })

  const { mutate: updateSaldo, isPending: isUpdating } = useMutation({
    mutationKey: [MainbookQueryKeys.update],
    mutationFn: MainbookService.update,
    onSuccess(_, values) {
      dequeueMonth(values as any)

      queryClient.invalidateQueries({
        queryKey: [MainbookQueryKeys.getAll]
      })
      queryClient.invalidateQueries({
        queryKey: [MainbookQueryKeys.getById]
      })
    }
  })

  useEffect(() => {
    if (queuedMonths.length > 0) {
      dialogToggle.open()
    }
  }, [queuedMonths.length, dialogToggle])

  const current = queuedMonths?.[0]
  useEffect(() => {
    if (!current) {
      return
    }
    autofill({
      month: current?.month,
      year: current?.year,
      budjet_id: current?.budjet_id,
      main_schet_id: current?.main_schet_id
    })
  }, [current])

  const handleUpdate = () => {
    if (!current) {
      return
    }
    const rows = form.getValues('childs')

    rows.pop()

    const childs = transformMainbookAutoFillDataToSave(types?.data ?? [], form.getValues())

    updateSaldo({
      id: Number(current.main_book_id),
      month: form.getValues('month'),
      year: form.getValues('year'),
      childs
    })
  }

  const columns = useMemo(
    () => [...MainbookProvodkaColumns, ...getMainbookColumns(types?.data ?? [])],
    [types]
  )

  return (
    <AlertDialog
      open={dialogToggle.isOpen}
      onOpenChange={(open) => {
        if (!open) {
          form.reset({
            ...defaultValues,
            childs: []
          })
          queryClient.invalidateQueries({
            queryKey: [MainbookQueryKeys.getAll]
          })
          queryClient.invalidateQueries({
            queryKey: [MainbookQueryKeys.getById]
          })
        }
        dialogToggle.setOpen(open)
      }}
    >
      <AlertDialogContent className="w-full max-w-[1690px] h-full max-h-[900px] p-0 flex flex-col gap-0">
        <AlertDialogHeader className="p-5 flex flex-row items-start justify-between gap-10">
          <div>
            <AlertDialogTitle className="text-xl font-bold">
              {queuedMonths.length === 0 ? t('action-successful') : t('saldo_update_required')}
            </AlertDialogTitle>
            <AlertDialogDescription className="mt-2">
              {queuedMonths.length > 0
                ? t('please_update_saldo_to_continue')
                : t('you_can_continue_working_now')}
            </AlertDialogDescription>
          </div>
          <MonthPicker
            readOnly
            value={`${form.watch('year')}-${form.watch('month')}-01`}
            onChange={() => {}}
          />
        </AlertDialogHeader>

        <div className="flex-1 overflow-auto scrollbar relative">
          {isAutofilling || isFetchingTypes ? <LoadingOverlay /> : null}
          {queuedMonths.length === 0 ? (
            <div className="flex h-full flex-col">
              <div className="flex-1 grid place-items-center">
                <div className="flex flex-col items-center gap-2.5">
                  <SuccessIcon width={250} />
                </div>
              </div>
            </div>
          ) : (
            <MainbookTable
              columns={columns}
              form={form}
              name="childs"
            />
          )}
        </div>

        <AlertDialogFooter className="flex items-center justify-end p-5 gap-5456  ">
          {queuedMonths.length === 0 ? (
            <AlertDialogCancel asChild>
              <Button variant="outline">{t('close')}</Button>
            </AlertDialogCancel>
          ) : (
            <Button
              loading={isUpdating}
              disabled={isUpdating}
              onClick={handleUpdate}
            >
              {t('next')}
              <ArrowRight className="btn-icon" />
            </Button>
          )}
        </AlertDialogFooter>
      </AlertDialogContent>
    </AlertDialog>
  )
}

const SuccessIcon = (props: SVGAttributes<SVGElement>) => {
  return (
    <svg
      viewBox="0 0 447 445"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <circle
        cx="229.516"
        cy={220}
        r={199}
        fill="url(#paint0_linear_102_180)"
      />
      <circle
        cx="403.411"
        cy="113.911"
        r="9.91052"
        stroke="#3CD077"
        strokeWidth={4}
      />
      <circle
        cx="102.5"
        cy="123.5"
        r="16.5"
        fill="url(#paint1_linear_102_180)"
      />
      <circle
        cx="286.911"
        cy="379.911"
        r="9.91052"
        stroke="#3CD077"
        strokeWidth={4}
      />
      <g filter="url(#filter0_f_102_180)">
        <path
          d="M85.5 234L88.8761 243.124L98 246.5L88.8761 249.876L85.5 259L82.1239 249.876L73 246.5L82.1239 243.124L85.5 234Z"
          fill="#3CD077"
        />
      </g>
      <path
        d="M403.08 290L408.099 303.562L421.661 308.58L408.099 313.599L403.08 327.161L398.062 313.599L384.5 308.58L398.062 303.562L403.08 290Z"
        fill="#3CD077"
      />
      <g filter="url(#filter1_f_102_180)">
        <path
          d="M294.392 31L300.44 47.344L316.784 53.3918L300.44 59.4396L294.392 75.7836L288.344 59.4396L272 53.3918L288.344 47.344L294.392 31Z"
          fill="#3CD077"
        />
      </g>
      <path
        d="M309.519 158.941C309.721 158.847 309.917 158.757 310.106 158.672L310.309 158.584C310.494 158.508 310.679 158.439 310.86 158.375L310.984 158.33C311.205 158.254 311.426 158.188 311.644 158.127C311.768 158.094 311.89 158.063 312.014 158.036L312.204 157.991C312.38 157.952 312.553 157.92 312.722 157.894H312.758C313.037 157.852 313.306 157.827 313.576 157.812H314.569C314.754 157.826 314.937 157.848 315.117 157.876L315.286 157.903C315.492 157.942 315.698 157.985 315.892 158.042H315.928C316.113 158.097 316.294 158.163 316.47 158.233L316.627 158.3C316.781 158.366 316.93 158.439 317.075 158.518L317.224 158.596L287.519 141.34L287.453 141.301L287.371 141.262C287.226 141.183 287.076 141.11 286.923 141.044L286.838 141.001L286.766 140.974C286.59 140.901 286.408 140.838 286.224 140.783H286.193C285.997 140.726 285.791 140.68 285.588 140.644L285.518 140.629H285.418C285.239 140.601 285.056 140.58 284.87 140.565H283.878C283.608 140.565 283.339 140.605 283.06 140.647H283.024C282.852 140.673 282.68 140.706 282.506 140.744L282.315 140.789C282.206 140.817 282.094 140.841 281.982 140.871H281.946C281.728 140.932 281.507 140.998 281.286 141.074L281.162 141.119C280.98 141.183 280.796 141.253 280.611 141.328L280.541 141.356L280.408 141.416C280.206 141.499 280.011 141.589 279.821 141.686L279.6 141.795C279.343 141.925 279.082 142.061 278.822 142.212L151.129 215.928C150.802 216.116 150.481 216.322 150.163 216.534L150.002 216.64C149.698 216.841 149.395 217.059 149.094 217.293L148.922 217.43C148.619 217.666 148.316 217.911 148.032 218.168L147.944 218.247C147.661 218.497 147.383 218.757 147.108 219.025L147.029 219.098L146.984 219.143C146.782 219.345 146.574 219.558 146.36 219.782L146.273 219.879C146.097 220.066 145.924 220.258 145.752 220.454L145.688 220.524L145.619 220.608C145.316 220.96 145.019 221.321 144.729 221.692L144.695 221.732L144.623 221.831C144.391 222.132 144.165 222.435 143.945 222.74L143.887 222.818L143.866 222.852C143.654 223.154 143.452 223.463 143.26 223.778L143.197 223.875L143.118 224.005C142.953 224.267 142.79 224.533 142.631 224.801L142.567 224.904L142.549 224.938C142.375 225.236 142.207 225.539 142.043 225.846L141.995 225.933L141.916 226.085C141.789 226.327 141.666 226.57 141.547 226.814L141.468 226.966L141.432 227.045C141.285 227.353 141.142 227.664 141.005 227.977L140.984 228.019L140.932 228.146C140.815 228.419 140.703 228.692 140.596 228.967L140.539 229.112L140.5 229.221C140.372 229.557 140.251 229.89 140.139 230.229V230.26L140.115 230.344C140.002 230.685 139.901 231.025 139.812 231.365C139.812 231.407 139.785 231.452 139.773 231.495L139.758 231.561C139.647 231.965 139.546 232.369 139.455 232.772C139.455 232.809 139.437 232.845 139.428 232.881C139.419 232.918 139.41 232.981 139.398 233.033C139.364 233.19 139.334 233.335 139.307 233.505C139.286 233.617 139.267 233.726 139.246 233.835C139.219 233.998 139.195 234.162 139.174 234.325C139.174 234.404 139.149 234.48 139.137 234.558V234.616C139.092 234.964 139.058 235.312 139.034 235.654V235.875C139.013 236.225 139.002 236.575 139.001 236.926L139.273 333.114C139.273 336.931 140.636 339.619 142.812 340.885L172.517 358.141C170.337 356.875 168.987 354.187 168.978 350.369L168.705 254.182C168.705 253.837 168.705 253.485 168.739 253.131V252.91C168.763 252.565 168.796 252.22 168.842 251.872C168.842 251.775 168.869 251.678 168.881 251.569C168.905 251.406 168.926 251.242 168.954 251.079C168.972 250.97 168.993 250.858 169.014 250.749C169.041 250.591 169.072 250.446 169.105 250.276L169.159 250.016C169.248 249.612 169.349 249.209 169.462 248.805L169.517 248.611C169.613 248.27 169.714 247.93 169.819 247.591L169.856 247.476C169.968 247.14 170.089 246.804 170.216 246.468L170.313 246.217C170.42 245.942 170.532 245.669 170.649 245.396L170.721 245.227C170.857 244.914 170.999 244.603 171.148 244.294L171.263 244.061C171.382 243.817 171.506 243.574 171.633 243.332L171.757 243.092C171.92 242.788 172.089 242.485 172.262 242.184L172.344 242.048C172.502 241.78 172.664 241.514 172.832 241.252L172.977 241.025C173.179 240.712 173.381 240.403 173.582 240.098L173.664 239.986C173.884 239.676 174.11 239.373 174.342 239.078L174.448 238.936C174.737 238.565 175.033 238.203 175.338 237.852L175.471 237.698C175.643 237.496 175.817 237.304 175.992 237.123L176.08 237.026C176.282 236.808 176.49 236.595 176.704 236.387L176.828 236.269C177.102 236 177.381 235.741 177.663 235.491L177.751 235.412C178.054 235.155 178.356 234.913 178.641 234.673L178.814 234.537C179.11 234.309 179.413 234.091 179.722 233.883L179.882 233.777C180.2 233.565 180.524 233.36 180.848 233.172L308.52 159.468C308.78 159.317 309.041 159.165 309.298 159.05L309.519 158.941Z"
        fill="url(#paint2_linear_102_180)"
      />
      <path
        d="M308.52 159.468C315.265 155.575 320.745 158.672 320.766 166.38L321.038 262.567C321.06 270.278 315.616 279.681 308.872 283.574L181.181 357.299C174.439 361.189 168.957 358.095 168.936 350.388L168.663 254.2C168.642 246.489 174.088 237.083 180.83 233.193L308.52 159.468Z"
        fill="url(#paint3_linear_102_180)"
      />
      <path
        d="M272.761 146.711C272.734 137.054 269.31 130.251 263.8 127.033L248.948 118.402C254.461 121.605 257.882 128.392 257.909 138.08L257.979 163.155L272.831 171.786L272.761 146.711Z"
        fill="#70F5A5"
      />
      <path
        d="M244.083 101.758C244.513 101.53 244.941 101.309 245.367 101.095L245.815 100.871C246.37 100.596 246.922 100.333 247.471 100.081L247.728 99.9657C248.198 99.7538 248.667 99.552 249.133 99.3602L249.663 99.1393C249.981 99.0081 250.3 98.8809 250.619 98.7578L251.161 98.5489C251.506 98.4187 251.851 98.2946 252.196 98.1735L252.629 98.0191C253.114 97.8536 253.597 97.6962 254.079 97.5469L254.285 97.4863C254.689 97.3612 255.099 97.2421 255.514 97.1291L256.22 96.9444L256.731 96.8143C256.992 96.7507 257.249 96.6932 257.506 96.6356L257.958 96.5327C258.26 96.4661 258.563 96.4056 258.884 96.348L259.187 96.2905C259.59 96.2158 259.989 96.1482 260.382 96.0877C260.988 95.9938 261.593 95.9212 262.175 95.8606L262.532 95.8243C263.109 95.7698 263.68 95.7284 264.245 95.7002H264.566C265.024 95.682 265.478 95.674 265.929 95.676H266.231C266.746 95.676 267.257 95.6941 267.763 95.7305L268.111 95.7547C268.515 95.7829 268.911 95.8183 269.301 95.8606L269.628 95.897C270.102 95.9535 270.571 96.0211 271.036 96.0998L271.338 96.1543C271.708 96.2209 272.074 96.2946 272.437 96.3753L272.801 96.457C273.246 96.563 273.688 96.675 274.121 96.7991L274.205 96.8264C274.611 96.9444 275.011 97.0746 275.416 97.2108L275.77 97.338C276.116 97.4631 276.457 97.5943 276.794 97.7315L277.036 97.8284C277.439 98 277.843 98.1826 278.247 98.3764L278.55 98.5217C278.866 98.6791 279.179 98.8436 279.488 99.0151C279.651 99.106 279.815 99.1907 279.975 99.2846L265.087 90.6324L264.784 90.4629L264.59 90.363C264.282 90.1914 263.969 90.0269 263.652 89.8695L263.349 89.7242C262.946 89.5224 262.542 89.3397 262.138 89.1763L262.078 89.149L261.896 89.0794C261.559 88.9421 261.218 88.811 260.873 88.6858L260.516 88.5587C260.119 88.4225 259.719 88.2923 259.305 88.1742L259.235 88.153C258.798 88.0266 258.358 87.9125 257.915 87.8109L257.549 87.7292C257.186 87.6485 256.819 87.5748 256.45 87.5082L256.241 87.4658H256.156C255.692 87.3871 255.223 87.3195 254.749 87.263L254.422 87.2267C254.018 87.1843 253.621 87.149 253.232 87.1207L253.008 87.0995H252.884C252.379 87.0692 251.869 87.0511 251.352 87.045H251.049C250.599 87.045 250.145 87.0531 249.687 87.0692H249.366C248.799 87.0955 248.228 87.1368 247.652 87.1934L247.295 87.2297C246.69 87.2933 246.105 87.3659 245.503 87.4567H245.485C245.095 87.5173 244.703 87.5839 244.307 87.6565L244.004 87.7141C243.702 87.7746 243.399 87.8321 243.078 87.8987L242.627 88.0017C242.37 88.0592 242.112 88.1167 241.852 88.1803L241.34 88.3104L240.771 88.4558L240.635 88.4951C240.231 88.6081 239.822 88.7272 239.406 88.8523L239.2 88.9129C238.72 89.0602 238.236 89.2176 237.75 89.3851L237.317 89.5395C236.972 89.6606 236.627 89.7848 236.282 89.9149L235.74 90.1238C235.421 90.2469 235.102 90.3741 234.783 90.5053L234.48 90.6264L234.25 90.7263C233.784 90.9281 233.316 91.1299 232.846 91.3317L232.588 91.4468C232.039 91.699 231.487 91.9624 230.932 92.2369L230.484 92.4609C230.059 92.6749 229.631 92.8959 229.201 93.1239L228.713 93.3843C228.15 93.687 227.587 93.9897 227.018 94.3288L218.871 99.0333C218.163 99.442 217.461 99.8688 216.752 100.305L216.392 100.529C215.722 100.951 215.056 101.385 214.394 101.831L214.007 102.094C213.331 102.554 212.656 103.026 211.987 103.511L211.824 103.632C211.178 104.104 210.535 104.587 209.895 105.082L209.593 105.312C208.945 105.817 208.301 106.333 207.661 106.862L207.28 107.165C206.64 107.698 206.003 108.24 205.37 108.793L205.115 109.017C204.51 109.558 203.904 110.108 203.299 110.667L203.09 110.861C202.466 111.444 201.848 112.038 201.234 112.641L201.04 112.829L200.816 113.053C200.498 113.37 200.18 113.69 199.863 114.013L199.433 114.449C198.979 114.917 198.527 115.389 198.077 115.865L198.055 115.887C197.613 116.357 197.176 116.832 196.742 117.312L196.315 117.788L195.407 118.805L195.189 119.05L195.031 119.235C194.381 119.984 193.739 120.743 193.106 121.514L192.83 121.85C192.193 122.629 191.564 123.418 190.944 124.215L190.844 124.339L190.666 124.575C190.131 125.267 189.602 125.967 189.079 126.673L189.022 126.752C188.489 127.474 187.964 128.203 187.448 128.937L187.275 129.177L187.148 129.361C186.684 130.025 186.226 130.694 185.774 131.368L185.537 131.726C185.134 132.331 184.739 132.937 184.354 133.542L184.175 133.814L184.078 133.969C183.66 134.625 183.248 135.285 182.84 135.949L182.592 136.357C182.251 136.918 181.915 137.482 181.584 138.047L181.402 138.349L181.29 138.546C180.907 139.204 180.529 139.866 180.158 140.532L179.997 140.835C179.674 141.418 179.356 142.003 179.041 142.591L178.883 142.893L178.744 143.163C178.421 143.768 178.103 144.382 177.79 145.004L177.691 145.2C177.349 145.874 177.014 146.551 176.685 147.232L176.576 147.453L176.422 147.78C176.156 148.335 175.894 148.891 175.638 149.448L175.426 149.908C175.113 150.592 174.811 151.279 174.518 151.969L174.457 152.103L174.327 152.405C174.075 152.991 173.828 153.577 173.585 154.164L173.364 154.7C173.078 155.406 172.797 156.113 172.523 156.819L172.493 156.895L172.408 157.122C172.156 157.784 171.909 158.447 171.669 159.111L171.481 159.635C171.217 160.373 170.961 161.113 170.712 161.854L170.679 161.951L170.607 162.178C170.36 162.92 170.123 163.664 169.895 164.409L169.774 164.802C169.534 165.593 169.304 166.385 169.084 167.176C169.063 167.251 169.038 167.327 169.017 167.403C168.996 167.479 168.975 167.563 168.954 167.645C168.707 168.543 168.473 169.44 168.251 170.336C168.221 170.46 168.194 170.582 168.163 170.706C167.939 171.632 167.725 172.558 167.528 173.485V173.536C167.494 173.688 167.467 173.839 167.437 173.99C167.352 174.405 167.264 174.82 167.186 175.235C167.143 175.456 167.104 175.68 167.062 175.901C166.992 176.267 166.925 176.636 166.862 177.003C166.819 177.242 166.78 177.481 166.741 177.717C166.682 178.066 166.626 178.414 166.571 178.761C166.533 179.008 166.495 179.254 166.459 179.5C166.409 179.843 166.36 180.185 166.314 180.526C166.296 180.663 166.274 180.799 166.256 180.932C166.256 181.011 166.241 181.086 166.229 181.165C166.13 181.936 166.042 182.705 165.966 183.472C165.966 183.584 165.944 183.696 165.935 183.808C165.869 184.516 165.811 185.223 165.763 185.927C165.763 186.057 165.742 186.191 165.736 186.321C165.687 187.078 165.65 187.831 165.624 188.582V189.066C165.602 189.835 165.587 190.604 165.59 191.367L165.66 216.443L180.512 225.074L180.451 199.992C180.451 199.229 180.451 198.463 180.485 197.691V197.207C180.511 196.456 180.548 195.702 180.597 194.946C180.597 194.815 180.615 194.682 180.624 194.552C180.672 193.848 180.73 193.141 180.797 192.433C180.797 192.321 180.815 192.209 180.827 192.097C180.904 191.33 180.991 190.561 181.09 189.79C181.116 189.578 181.145 189.365 181.175 189.151C181.221 188.808 181.27 188.466 181.32 188.125C181.357 187.879 181.394 187.633 181.432 187.386C181.487 187.037 181.543 186.689 181.602 186.342C181.641 186.103 181.681 185.864 181.723 185.627C181.787 185.261 181.856 184.895 181.923 184.525C181.965 184.304 182.004 184.08 182.047 183.859C182.129 183.445 182.213 183.03 182.298 182.615C182.334 182.446 182.365 182.279 182.401 182.11C182.598 181.183 182.813 180.257 183.037 179.331L183.125 178.961C183.347 178.065 183.581 177.168 183.827 176.27L183.957 175.801C184.179 175.01 184.409 174.218 184.647 173.427L184.768 173.034C184.999 172.289 185.236 171.545 185.48 170.803L185.586 170.476C185.834 169.735 186.09 168.995 186.355 168.257L186.542 167.733C186.783 167.069 187.029 166.406 187.281 165.744L187.396 165.441C187.669 164.733 187.949 164.026 188.238 163.322L188.459 162.786C188.701 162.199 188.948 161.613 189.2 161.027L189.391 160.582C189.69 159.894 189.993 159.207 190.299 158.521L190.511 158.06C190.768 157.503 191.029 156.947 191.295 156.392L191.559 155.844C191.888 155.164 192.223 154.487 192.564 153.813L192.664 153.616C192.977 153.011 193.294 152.397 193.617 151.776L193.92 151.216C194.235 150.628 194.554 150.043 194.877 149.46L195.037 149.157C195.409 148.491 195.786 147.829 196.169 147.171L196.472 146.669C196.803 146.103 197.139 145.54 197.48 144.979L197.729 144.571C198.132 143.907 198.545 143.247 198.967 142.591L199.242 142.164C199.632 141.558 200.026 140.953 200.426 140.347L200.662 139.99C201.114 139.316 201.572 138.647 202.036 137.983L202.339 137.556C202.858 136.822 203.383 136.093 203.913 135.37L203.971 135.292C204.492 134.585 205.02 133.886 205.557 133.194L205.836 132.834C206.455 132.026 207.084 131.238 207.722 130.469L207.997 130.133C208.631 129.364 209.273 128.604 209.923 127.854L210.298 127.424C210.597 127.083 210.899 126.744 211.206 126.407L211.633 125.931C212.069 125.451 212.507 124.976 212.947 124.505L212.968 124.484C213.416 124.006 213.868 123.534 214.324 123.067L214.754 122.631C215.071 122.309 215.389 121.989 215.708 121.672L216.126 121.26C216.731 120.655 217.35 120.061 217.981 119.48L218.19 119.286C218.796 118.727 219.401 118.177 220.007 117.636L220.261 117.412C220.893 116.857 221.529 116.314 222.171 115.784L222.553 115.481C223.193 114.954 223.836 114.437 224.484 113.931L224.787 113.701C225.427 113.206 226.069 112.723 226.715 112.251L226.879 112.13C227.548 111.645 228.22 111.173 228.898 110.713L229.286 110.449C229.948 110.003 230.614 109.569 231.284 109.148L231.644 108.924C232.343 108.488 233.046 108.061 233.763 107.652L241.91 102.948C242.476 102.621 243.042 102.309 243.605 102.003L244.083 101.758Z"
        fill="url(#paint4_linear_102_180)"
      />
      <path
        d="M241.904 102.96C271.396 85.934 295.46 99.6478 295.557 133.536L295.627 158.611L272.834 171.771L272.761 146.711C272.707 127.269 258.896 119.401 241.976 129.167L233.83 133.872C216.913 143.641 203.193 167.406 203.253 186.85L203.323 211.926L180.524 225.089L180.451 199.992C180.352 166.104 204.268 124.69 233.757 107.658L241.904 102.96Z"
        fill="#3DD178"
      />
      <g clipPath="url(#clip0_102_180)">
        <path
          d="M255.204 252.875C256.945 252.605 258.538 252.691 259.982 253.132C261.427 253.574 262.68 254.334 263.741 255.413C264.803 256.492 265.621 257.884 266.194 259.588C266.768 261.292 267.054 263.248 267.054 265.455C267.054 268.349 266.587 271.316 265.653 274.357C264.718 277.398 263.433 280.322 261.798 283.13C260.163 285.938 258.262 288.507 256.096 290.836C253.93 293.166 251.615 295.042 249.151 296.464C246.688 297.887 244.373 298.684 242.207 298.855C240.04 299.027 238.14 298.653 236.504 297.733C234.869 296.814 233.584 295.373 232.65 293.411C231.715 291.449 231.248 289.022 231.248 286.128C231.248 283.872 231.545 281.554 232.14 279.176C232.735 276.797 233.563 274.455 234.625 272.15C235.687 269.845 236.95 267.632 238.416 265.51C239.881 263.389 241.485 261.458 243.226 259.717V228.818C243.226 227.935 243.364 226.997 243.64 226.004C243.916 225.011 244.309 224.036 244.819 223.079C245.329 222.123 245.934 221.234 246.635 220.413C247.335 219.591 248.089 218.947 248.896 218.481C249.703 218.015 250.489 217.77 251.254 217.746C252.018 217.721 252.698 217.868 253.293 218.187C253.887 218.506 254.354 218.984 254.694 219.622C255.034 220.259 255.204 221.02 255.204 221.902V252.875ZM249.279 282.854C250.978 281.873 252.422 280.353 253.611 278.293C254.8 276.233 255.395 274.198 255.395 272.187C255.395 270.225 254.8 268.901 253.611 268.214C252.422 267.527 250.978 267.674 249.279 268.655C247.537 269.661 246.072 271.193 244.883 273.253C243.693 275.313 243.099 277.324 243.099 279.286C243.099 281.297 243.693 282.646 244.883 283.332C246.072 284.019 247.537 283.86 249.279 282.854ZM263.041 219.585C265.759 218.015 267.118 218.702 267.118 221.645V226.427C267.118 228.143 266.747 229.547 266.003 230.639C265.26 231.73 264.442 232.533 263.55 233.048L259.154 235.586V221.829L263.041 219.585Z"
          fill="white"
        />
      </g>
      <path
        d="M39 354.637C44.8333 361.137 60 371.137 74 359.137C91.5 344.137 105 350.137 114 359.137C123 368.137 135.5 374.137 150.5 359.137"
        stroke="#3DD178"
        strokeWidth={4}
        strokeLinejoin="round"
      />
      <path
        d="M369 179.045C372.976 183.313 383.314 189.88 392.857 182C404.785 172.149 413.987 176.09 420.121 182C426.256 187.91 434.776 191.851 445 182"
        stroke="#3DD178"
        strokeWidth={4}
        strokeLinejoin="round"
      />
      <defs>
        <filter
          id="filter0_f_102_180"
          x={69}
          y={230}
          width={33}
          height={33}
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood
            floodOpacity={0}
            result="BackgroundImageFix"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="BackgroundImageFix"
            result="shape"
          />
          <feGaussianBlur
            stdDeviation={2}
            result="effect1_foregroundBlur_102_180"
          />
        </filter>
        <filter
          id="filter1_f_102_180"
          x={268}
          y={27}
          width="52.7837"
          height="52.7836"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood
            floodOpacity={0}
            result="BackgroundImageFix"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="BackgroundImageFix"
            result="shape"
          />
          <feGaussianBlur
            stdDeviation={2}
            result="effect1_foregroundBlur_102_180"
          />
        </filter>
        <linearGradient
          id="paint0_linear_102_180"
          x1="229.516"
          y1={21}
          x2="229.516"
          y2={419}
          gradientUnits="userSpaceOnUse"
        >
          <stop
            stopColor="white"
            stopOpacity={0}
          />
          <stop
            offset={1}
            stopColor="#C0FFD9"
          />
        </linearGradient>
        <linearGradient
          id="paint1_linear_102_180"
          x1="102.5"
          y1={107}
          x2="102.5"
          y2={140}
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#3CD077" />
          <stop
            offset={1}
            stopColor="#3CD077"
            stopOpacity={0}
          />
        </linearGradient>
        <linearGradient
          id="paint2_linear_102_180"
          x1="228.112"
          y1="140.565"
          x2="228.112"
          y2="358.141"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#CEFFE2" />
          <stop
            offset={1}
            stopColor="#1BC45E"
          />
        </linearGradient>
        <linearGradient
          id="paint3_linear_102_180"
          x1="244.851"
          y1="157.786"
          x2="244.851"
          y2="358.979"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#3DD178" />
          <stop
            offset={1}
            stopColor="#EDFFF4"
          />
        </linearGradient>
        <linearGradient
          id="paint4_linear_102_180"
          x1="222.783"
          y1="87.045"
          x2="222.783"
          y2="225.074"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#6FF5A5" />
          <stop
            offset={1}
            stopColor="#D7FFE7"
          />
        </linearGradient>
        <clipPath id="clip0_102_180">
          <rect
            width="78.1301"
            height="78.1301"
            fill="white"
            transform="matrix(0.866025 -0.5 0 1 214.878 238.122)"
          />
        </clipPath>
      </defs>
    </svg>
  )
}
